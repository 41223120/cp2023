<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite</a></p>
<h1>我的作業</h1>
<h2>w6</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China
// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621
// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library
// https://www.rapidtables.com/web/color/RGB_Color.html
// 幾何形狀著色與繪圖練習
// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖
#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_roc_flag(gdImagePtr img);
void draw_white_sun(gdImagePtr img, int x, int y, int size, int color);

int main() {
    // width 3: height 2
    int width = 1200;
    // 國旗長寬比為 3:2
    int height = (int)(width*2.0 / 3.0);

    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);

    draw_roc_flag(img);

    FILE *outputFile = fopen("./../images/roc_flag_in_gd.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}

void draw_roc_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    // 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處
    int center_x = (int)(width/4);
    int center_y = (int)(height/4);
    // gdImageFilledEllipse 需以長寬方向的 diameter 作圖
    // 由於中央白日圓形的半徑為青天寬度的 1/8
    // 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8
    // 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8
    int sun_radius = (int)(width/8);
    // 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑
    int white_circle_dia = sun_radius;
    // 中央藍色圓形半徑為中央白日的 1又 2/15
    int blue_circle_dia = white_circle_dia +  white_circle_dia*2/15;
    // 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值
    red = gdImageColorAllocate(img, 255, 0, 0); // 紅色
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色
    blue = gdImageColorAllocate(img, 0, 0, 149); // 藍色
    // 根據畫布大小塗上紅色長方形區域
    gdImageFilledRectangle(img, 0, 0, width, height, red);
    // 青天面積為整面國旗的 1/4, 也是採用長方形塗色
    gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);
    // 先設法以填色畫出六個白色堆疊菱形
    draw_white_sun(img, center_x, center_y, sun_radius, white);
    // 利用一個藍色大圓與白色小圓畫出藍色環狀
    gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);
    gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);

}

void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int color) {
    // M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位
    // 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度
    float deg = M_PI/180;
    // 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度
    // 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小
    float sr = sun_radius/tan(75*deg);
    int ax, ay, bx, by, dx, dy, ex, ey;
    gdPoint points[4];
    /* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確
    ax = center_x;
    ay = center_y - sun_radius;
    bx = center_x - sun_radius*tan(15*deg);
    by = center_y;
    ex = center_x;
    ey = center_y + sun_radius;
    dx = center_x + sun_radius*tan(15*deg);
    dy = center_y;
    // AB
    gdImageLine(img, ax, ay, bx, by, color);
    // BE
    gdImageLine(img, bx, by, ex, ey, color);
    // ED
    gdImageLine(img, ex, ey, dx, dy, color);
    // DA
    gdImageLine(img, dx, dy, ax, ay, color);
    */
    ax = center_x;
    ay = center_y - sun_radius;
    bx = center_x - sun_radius*tan(15*deg);
    by = center_y;
    ex = center_x;
    ey = center_y + sun_radius;
    dx = center_x + sun_radius*tan(15*deg);
    dy = center_y;
    // 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域
    for (int i=1;i&lt;=6;i++){
    // A
    points[0].x = ax+sun_radius*sin(30*deg*i);
    points[0].y = ay+sun_radius-sun_radius*cos(30*deg*i);
    // B
    points[1].x = bx+sr-sr*cos(30*deg*i);
    points[1].y = by-sr*sin(30*deg*i);
    // E
    points[2].x = ex-sun_radius*sin(30*deg*i);
    points[2].y = ey-(sun_radius-sun_radius*cos(30*deg*i));
    // D
    points[3].x = dx-(sr-sr*cos(30*deg*i));
    points[3].y = dy+sr*sin(30*deg*i);
    // 對菱形區域範圍塗色
    gdImageFilledPolygon(img, points, 4, color);
    // 在菱形區域外圍畫線, 明確界定菱形範圍
    gdImagePolygon(img, points, 4, color);
    }
}</pre>
<p><img alt="" height="267" src="/images/roc_flag_in_gd.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_usa_flag(gdImagePtr img);
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);

int main() {
    int width = 800;
    int height = (int)(width / 1.9);

    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);

    draw_usa_flag(img);

    FILE *outputFile = fopen("./../images/usa_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "打开输出文件时出错。\n");
        return 1;
    }

    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);

    return 0;
}

void draw_usa_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    // 国旗颜色
    red = gdImageColorAllocate(img, 178, 34, 52); // 红色条纹
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色条纹
    blue = gdImageColorAllocate(img, 60, 59, 110); // 蓝色矩形

    int stripe_height = height / 13;
    int stripe_width = width;
    int star_size = (int)(0.0308 * height); // 星星大小

    for (int y = 0; y &lt; height; y += stripe_height) {
        if (y / stripe_height % 2 == 0) {
            gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, red);
        } else {
            gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, white);
        }
    }

    gdImageFilledRectangle(img, 0, 0, width * 2 / 5, stripe_height * 7, blue);

    int star_spacing_x = (int)(0.129 * height); // 横向星星之间的间距
    int star_spacing_y = (int)(0.054 * height); // 纵向星星之间的间距
    int star_start_x = (int)(0.125 * height); // 星星的起始X位置
    int star_start_y = (int)(0.0485 * height); // 星星的起始Y位置

    for (int row = 0; row &lt; 9; row++) {
        int starsPerRow = (row % 2 == 0) ? 6 : 5;

        // 计算2、4、6和8排星星的偏移量
        int offset_x = (row % 2 == 0) ? star_spacing_x / -2 : 0;

        for (int star = 0; star &lt; starsPerRow; star++) {
            int x = star_start_x + star * star_spacing_x + offset_x;

            // 旋转角度（以弧度为单位）
            double rotation_angle = M_PI / 5; // 忘記多少度的旋转

            int y = star_start_y + row * star_spacing_y;
            draw_star(img, x, y, star_size, white, rotation_angle);
        }
    }
}

void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {
    gdPoint points[10];

    for (int i = 0; i &lt; 10; i++) {
        double angle = M_PI / 2 + i * 2 * M_PI / 10 + rotation_angle;
        int radius = (i % 2 == 0) ? size : size / 2;
        points[i].x = x + radius * cos(angle);
        points[i].y = y + radius * sin(angle);
    }

    // 用指定的颜色填充星星
    gdImageFilledPolygon(img, points, 10, color);
}</pre>
<p><img alt="" height="211" src="/images/usa_flag.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_japan_flag(gdImagePtr img);
void draw_red_sun(gdImagePtr img, int x, int y, int size, int color);

int main() {
    int originalWidth = 1200;
    int originalHeight = (int)(originalWidth * 2.0 / 3.0);
    gdImagePtr img = gdImageCreateTrueColor(originalWidth, originalHeight);
    gdImageAlphaBlending(img, 0);

    draw_japan_flag(img);

    // 新的宽度和高度以适应 "images" 文件夹
    int newWidth = 600;
    int newHeight = (int)(newWidth * 2.0 / 3.0);

    // 创建新图像并进行缩放
    gdImagePtr resizedImage = gdImageCreateTrueColor(newWidth, newHeight);
    gdImageAlphaBlending(resizedImage, 0);
    gdImageCopyResampled(resizedImage, img, 0, 0, 0, 0, newWidth, newHeight, originalWidth, originalHeight);

  FILE *outputFile = fopen("./../images/japan_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePng(resizedImage, outputFile);
    fclose(outputFile);
    gdImageDestroy(img);
    gdImageDestroy(resizedImage);

    return 0;
}

void draw_japan_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);

    // 创建一个白色背景
    int white = gdImageColorAllocate(img, 255, 255, 255);
    gdImageFilledRectangle(img, 0, 0, width - 1, height - 1, white);

    // 绘制红色圆圈（太阳）
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int center_x = width / 2;
    int center_y = height / 2;
    int radius = (int)((width * 2) / 3);
    draw_red_sun(img, center_x, center_y, radius, red);
}

void draw_red_sun(gdImagePtr img, int x, int y, int size, int color) {
  // 減小 size 的值,例如將他的值減半
  size = size / 2;
    gdImageArc(img, x, y, size, size, 0, 360, color);
    gdImageFillToBorder(img, x, y, color, color);
}</pre>
<p><img alt="" height="267" src="/images/japan_flag.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_uk_flag(gdImagePtr img);
void fillTriangle(gdImagePtr img, int x1, int y1, int x2, int y2, int x3, int y3, int color);

int main() {
// 设置国旗的宽和高
int width = 1200;
int height = width / 2;

// 创建图像
gdImagePtr img = gdImageCreateTrueColor(width, height);
gdImageAlphaBlending(img, 0);

// 绘制英国国旗
draw_uk_flag(img);

// 将图像保存到文件
FILE *outputFile = fopen("./../images/uk_flag.png", "wb");
if (outputFile == NULL) {
fprintf(stderr, "打开输出文件时发生错误。\n");
return 1;
}
gdImagePngEx(img, outputFile, 9);
fclose(outputFile);
gdImageDestroy(img);
return 0;
}



void draw_uk_flag(gdImagePtr img) {
int width = gdImageSX(img);
int height = gdImageSY(img);

int red, white, blue;
red = gdImageColorAllocate(img, 204, 0, 0); // 红色
white = gdImageColorAllocate(img, 255, 255, 255); // 白色
blue = gdImageColorAllocate(img, 0, 0, 153); // 蓝色

gdImageFilledRectangle(img, 0, 0, width, height, blue);


int x1, y1, x2, y2, x3, y3;
{
int line_thickness = 100;
gdImageSetThickness(img, line_thickness);

int x1, y1, x2, y2, x3, y3;

// 绘制白色斜线
x1 = 0;
y1 = 600;
x2 = 1200;
y2 = 0;
gdImageLine(img, x1, y1, x2, y2, white);

x1 = 0;
y1 = 0;
x2 = 1200;
y2 = 600;
gdImageLine(img, x1, y1, x2, y2, white);
}
{
int line_thickness = 33;
gdImageSetThickness(img, line_thickness);


// 绘制红色斜线
x1 = 566;
y1 = 300;
x2 = 1166;
y2 = 0;
gdImageLine(img, x1, y1, x2, y2, red);

x1 = 1233;
y1 = 600;
x2 = 633;
y2 = 300;
gdImageLine(img, x1, y1, x2, y2, red);

x1 = 566;
y1 = 300;
x2 = -33;
y2 = 0;
gdImageLine(img, x1, y1, x2, y2, red);

x1 = 600;
y1 = 316.5;
x2 = 0;
y2 = 616.5;
gdImageLine(img, x1, y1, x2, y2, red);
}
{
int line_thickness = 33;
gdImageSetThickness(img, line_thickness);

int x1, y1, x2, y2, x3, y3;

// 绘制 斜线
x1 = 0;
y1 = 600;
x2 = 1200;
y2 = 0;
gdImageLine(img, x1, y1, x2, y2, red );


x1 = 1200;
y1 = 16.5;
x2 = 600;
y2 = 316.5;
gdImageLine(img, x1, y1, x2, y2, white);


x1 = 0;
y1 = 583.5;
x2 = 600;
y2 = 283.5;
gdImageLine(img, x1, y1, x2, y2, white);


}

// 绘制白色十字
int cross_width = width / 32;
int cross_arm_width = width / 32;
int center_x = width / 2;
int center_y = height / 2;

gdImageFilledRectangle(img, center_x + 2.7 * cross_width, 0, center_x - 2.7 * cross_width, height, white);
gdImageFilledRectangle(img, 0, center_y + 2.7 * cross_arm_width, width, center_y - 2.7 * cross_arm_width, white);

// 绘制红色十字
gdImageFilledRectangle(img, center_x + 1.5 * cross_width, 0, center_x - 1.5 * cross_width, height, red);
gdImageFilledRectangle(img, 0, center_y + 1.5 * cross_arm_width, width, center_y - 1.5 * cross_arm_width, red);
}</pre>
<p><br/><br/></p>
<p><img alt="" height="200" src="/images/uk_flag.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_chinese_flag(gdImagePtr img);

int main() {
int width = 300; // 國旗寬度
int height = 200; // 國旗高度

gdImagePtr im = gdImageCreateTrueColor(width, height);
gdImageAlphaBlending(im, 0);

draw_chinese_flag(im);

FILE *outputFile = fopen("./../images/proc_flag.png", "wb");
if (outputFile == NULL) {
fprintf(stderr, "打开输出文件时出错。\n");
return 1;
}

gdImagePngEx(im, outputFile, 9);
fclose(outputFile);
gdImageDestroy(im);

return 0;
}

// 声明 draw_star 函数
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);

void draw_chinese_flag(gdImagePtr img) {
int width = gdImageSX(img);
int height = gdImageSY(img);
int red, yellow;

// 國旗顏色
red = gdImageColorAllocate(img, 255, 0, 0); // 紅色背景
yellow = gdImageColorAllocate(img, 255, 255, 0); // 黃色星星

// 畫紅色背景
gdImageFilledRectangle(img, 0, 0, width, height, red);

// 設置星星的大小和位置
int star_size = (int)(0.28 * height);
int star_x = (int)(0.165 * width);
int star_y = (int)(0.265 * height);

// 畫大星星
draw_star(img, star_x, star_y, star_size, yellow, 11.0);

// 繪製小星星，位置根據實際國旗比例計算
double radius = 0.15 * height;
double angle = 360 / 7 * M_PI / 179.0;
double rotation = -M_PI / 7.5;
int cx = (int)(0.32 * width);
int cy = (int)(0.27 * height);

for (int i = -1; i &lt; 3; i++) {
int x = (int)(cx + radius * cos(i * angle + rotation));
int y = (int)(cy + radius * sin(i * angle + rotation));
draw_star(img, x, y, 19, yellow, M_PI / 5.0);
}
}

void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {
gdPoint points[10];

// 计算星形的五个外点和五个内点
double outer_radius = size / 2;
double inner_radius = size / 6;
double angle = M_PI / 5.0;

for (int i = 0; i &lt; 10; i++) {
double radius = (i % 2 == 0) ? outer_radius : inner_radius;
double theta = rotation_angle + i * angle;
points[i].x = x + radius * cos(theta);
points[i].y = y + radius * sin(theta);
}

// 使用 gdImageFilledPolygon 绘制星形
gdImageFilledPolygon(img, points, 10, color);
}



#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

gdPoint *drawThinStar(int x, int y, int radius, int numPoints);

void draw_star_circle(gdImagePtr img);

int main() {
// 设置图像宽度和高度
int width = 900; // 可根据需要调整
int height = 600; // 可根据需要调整

// 创建画布
gdImagePtr img = gdImageCreateTrueColor(width, height);
// 设置白色背景
int blue = gdImageColorAllocate(img, 0, 0, 150);
gdImageFill(img, 0, 0, blue);

// 确保画布成功创建
if (img == NULL) {
fprintf(stderr, "画布创建失败\n");
return 1; // 返回错误代码
}

// 绘制星星圈
draw_star_circle(img);

// 保存图片
FILE *outputFile = fopen("thin_star_circle.png", "wb");
gdImagePng(img, outputFile);
fclose(outputFile);

// 释放内存
gdImageDestroy(img);

printf("星星圈已经绘制完成，保存为 thin_star_circle.png\n");

return 0;
}

void draw_star_circle(gdImagePtr img) {
int width = gdImageSX(img);
int height = gdImageSY(img);

// 分配颜色
int yellow = gdImageColorAllocate(img, 255, 223, 0); // 中黄色

// 获取中心坐标
int centerX = width / 2;
int centerY = height / 2;

// 半径和数量
int radius = height / 3;
int numStars = 12;

// 绘制星星圈
for (int i = 0; i &lt; numStars; i++) {
double angle = (2 * M_PI * i) / numStars;

// 计算星星位置
int starX = centerX + cos(angle) * radius;
int starY = centerY + sin(angle) * radius;

// 绘制五角星
gdImageFilledPolygon(img, drawThinStar(starX, starY, height / 30, 5), 10, yellow);
}
}

gdPoint *drawThinStar(int x, int y, int radius, int numPoints) {
int i;
static gdPoint star[11];

for (i = 0; i &lt; 2 * numPoints; i++) {
double outerRadius = (i % 2 == 0) ? radius * 1.5 : radius * 0.5; // 调整星星尖角的长度
double angle = M_PI * i / numPoints;
star[i].x = x + cos(angle) * outerRadius;
star[i].y = y + sin(angle) * outerRadius;
}

// 将最后一个点连接到第一个点，形成闭合的多边形
star[2 * numPoints] = star[0];

return star;
}</pre>
<p><br/><br/></p>
<p><img alt="" height="267" src="/images/thin_star_circle.png" width="400"/></p>
<h2>w5</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// 包含標準輸出入程式庫的標頭文件
// https://blog.csdn.net/weixin_38468077/article/details/101069365
// http://www.gnuplot.info/demo/
// https://github.com/sysprog21/rv32emu
// https://github.com/sysprog21/semu 
// https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3
// https://cs61c.org/fa23/
// https://greenteapress.com/wp/think-python-2e/
// https://github.com/ecalvadi/c99-examples
// https://github.com/gouravthakur39/beginners-C-program-examples
// https://github.com/ergenekonyigit/Numerical-Analysis-Examples
// https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf
// https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf
// https://jsommers.github.io/cbook/cbook.pdf
// https://jsommers.github.io/cbook/index.html
// http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf
// http://cslibrary.stanford.edu/101/EssentialC.pdf
// https://publications.gbdirect.co.uk/c_book/
// https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf
// ***** execute on replit 
// cd downloads
// cc gnuplot_ex1.c -o gnuplot_ex1
// ./gnuplot_ex1
#include &lt;stdio.h&gt;

// 主函式
int main() {
    // Start a Gnuplot process using popen
    FILE *gnuplotPipe = popen("gnuplot -persistent", "w");
    if (!gnuplotPipe) {
        fprintf(stderr, "Failed to start Gnuplot.\n");
        return 1;
    }

    // Use Gnuplot plotting commands, specify font and output as PNG
    fprintf(gnuplotPipe, "set terminal png font 'default,10' size 800,400\n");
    fprintf(gnuplotPipe, "set output './../images/gnuplot_ex1.png'\n");
    fprintf(gnuplotPipe, "plot sin(x)");
    // Close popen
    pclose(gnuplotPipe);

    return 0;
}</pre>
<p><img alt="" height="200" src="/images/gnuplot_ex1.png" width="400"/></p>
<h2>w9</h2>
<p><span>w9 程式練習</span>:</p>
<p></p>
<p>read_last_final1.c 原始碼:</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_711697">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;string.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">main() {</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Open the user file for reading</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code><code class="cpp plain">* user_file =<span> </span></code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"2b_user_list.txt"</code><code class="cpp plain">,<span> </span></code><code class="cpp string">"r"</code><code class="cpp plain">);</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(user_file == NULL) {</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"Error opening user file"</code><code class="cpp plain">);</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code><span> </span><code class="cpp plain">1;</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">char</code><span> </span><code class="cpp plain">line[100];<span> </span></code><code class="cpp comments">// Assuming a maximum line length of 100 characters</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">char</code><span> </span><code class="cpp plain">valid_users[100][20];<span> </span></code><code class="cpp comments">// Assuming a maximum of 100 valid users with a length of 20 characters each</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">valid_user_count = 0;</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Read and store the student numbers from the user file</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code><span> </span><code class="cpp plain">(</code><code class="cpp functions bold">fgets</code><code class="cpp plain">(line,<span> </span></code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(line), user_file)) {</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp plain">line[</code><code class="cpp functions bold">strcspn</code><code class="cpp plain">(line,<span> </span></code><code class="cpp string">"\n"</code><code class="cpp plain">)] =<span> </span></code><code class="cpp string">'\0'</code><code class="cpp plain">;<span> </span></code><code class="cpp comments">// Remove the newline character</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(valid_users[valid_user_count], line);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">        </code><code class="cpp plain">valid_user_count++;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Close the user file</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(user_file);</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Open the CAD file for reading</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code><code class="cpp plain">* cad_file =<span> </span></code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"cad2023_2b_w8.txt"</code><code class="cpp plain">,<span> </span></code><code class="cpp string">"r"</code><code class="cpp plain">);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(cad_file == NULL) {</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"Error opening CAD file"</code><code class="cpp plain">);</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code><span> </span><code class="cpp plain">1;</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">char</code><span> </span><code class="cpp plain">unique_users[100][20];<span> </span></code><code class="cpp comments">// Assuming a maximum of 100 unique users with a length of 20 characters each</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">unique_user_count = 0;</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Read the CAD file line by line</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code><span> </span><code class="cpp plain">(</code><code class="cpp functions bold">fgets</code><code class="cpp plain">(line,<span> </span></code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(line), cad_file)) {</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">char</code><code class="cpp plain">* token =<span> </span></code><code class="cpp functions bold">strtok</code><code class="cpp plain">(line,<span> </span></code><code class="cpp string">" "</code><code class="cpp plain">);<span> </span></code><code class="cpp comments">// Split the line by space</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(token != NULL &amp;&amp;<span> </span></code><code class="cpp functions bold">strstr</code><code class="cpp plain">(token,<span> </span></code><code class="cpp string">"cad"</code><code class="cpp plain">) == token) {</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">            </code><code class="cpp comments">// Extract the student number (skip "cad")</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">            </code><code class="cpp color1 bold">char</code><span> </span><code class="cpp plain">student_number[20];<span> </span></code><code class="cpp comments">// Assuming a maximum length of 20 characters for a student number</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">            </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(student_number, token + 3);<span> </span></code><code class="cpp comments">// Skip "cad"</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">            </code> </div>
<div class="line number45 index44 alt2"><code class="cpp spaces">            </code><code class="cpp comments">// Check if the student number is in the list of valid users and not a duplicate</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">            </code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">is_valid = 0;</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">for</code><span> </span><code class="cpp plain">(</code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">i = 0; i &lt; valid_user_count; i++) {</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">                </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(</code><code class="cpp functions bold">strcmp</code><code class="cpp plain">(valid_users[i], student_number) == 0) {</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">                    </code><code class="cpp plain">is_valid = 1;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">                    </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">                </code><code class="cpp plain">}</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">            </code><code class="cpp plain">}</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces">            </code> </div>
<div class="line number54 index53 alt1"><code class="cpp spaces">            </code><code class="cpp comments">// Add the student number to the unique_users list if it's valid and not a duplicate</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(is_valid) {</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">                </code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">is_duplicate = 0;</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">                </code><code class="cpp keyword bold">for</code><span> </span><code class="cpp plain">(</code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">i = 0; i &lt; unique_user_count; i++) {</code></div>
<div class="line number58 index57 alt1"><code class="cpp spaces">                    </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(</code><code class="cpp functions bold">strcmp</code><code class="cpp plain">(unique_users[i], student_number) == 0) {</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">                        </code><code class="cpp plain">is_duplicate = 1;</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">                        </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">                    </code><code class="cpp plain">}</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">                </code><code class="cpp plain">}</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">                </code> </div>
<div class="line number64 index63 alt1"><code class="cpp spaces">                </code><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(!is_duplicate) {</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">                    </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(unique_users[unique_user_count], student_number);</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">                    </code><code class="cpp plain">unique_user_count++;</code></div>
<div class="line number67 index66 alt2"><code class="cpp spaces">                </code><code class="cpp plain">}</code></div>
<div class="line number68 index67 alt1"><code class="cpp spaces">            </code><code class="cpp plain">}</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces">        </code><code class="cpp plain">}</code></div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number71 index70 alt2"> </div>
<div class="line number72 index71 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Reverse the order of the unique student numbers</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code><span> </span><code class="cpp plain">(</code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">i = 0; i &lt; unique_user_count / 2; i++) {</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">char</code><span> </span><code class="cpp plain">temp[20];</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(temp, unique_users[i]);</code></div>
<div class="line number76 index75 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(unique_users[i], unique_users[unique_user_count - 1 - i]);</code></div>
<div class="line number77 index76 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(unique_users[unique_user_count - 1 - i], temp);</code></div>
<div class="line number78 index77 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number79 index78 alt2"> </div>
<div class="line number80 index79 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Print the unique student numbers in reverse order</code></div>
<div class="line number81 index80 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code><span> </span><code class="cpp plain">(</code><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">i = 0; i &lt; unique_user_count; i++) {</code></div>
<div class="line number82 index81 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">, unique_users[i]);</code></div>
<div class="line number83 index82 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number84 index83 alt1"> </div>
<div class="line number85 index84 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close the CAD file</code></div>
<div class="line number86 index85 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(cad_file);</code></div>
<div class="line number87 index86 alt2"> </div>
<div class="line number88 index87 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code><span> </span><code class="cpp plain">0;</code></div>
<div class="line number89 index88 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>若採用 Python 編寫:</p>
<p>read_last.py 原始碼</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_293118">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 讀取學號檔案</code></div>
<div class="line number2 index1 alt1"><code class="py plain">with<span> </span></code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"2b_user_list.txt"</code><code class="py plain">,<span> </span></code><code class="py string">'r'</code><code class="py plain">) as user_file:</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">user_lines<span> </span></code><code class="py keyword">=</code><span> </span><code class="py plain">user_file.read().splitlines()</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py comments"># 讀取 last 指令轉出的檔案, 以 last -w &gt; cad2023_2b_w8.txt 建立檔案</code></div>
<div class="line number6 index5 alt1"><code class="py plain">with<span> </span></code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"cad2023_2b_w8.txt"</code><code class="py plain">,<span> </span></code><code class="py string">'r'</code><code class="py plain">) as cad_file:</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py comments"># 以下是利用跳行符號, 將每一行區隔成數列</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">cad_lines<span> </span></code><code class="py keyword">=</code><span> </span><code class="py plain">cad_file.read().splitlines()</code></div>
<div class="line number9 index8 alt2"><code class="py comments">#print(cad_lines)</code></div>
<div class="line number10 index9 alt1"><code class="py spaces"> </code> </div>
<div class="line number11 index10 alt2"><code class="py comments"># 從 cad_lines 建立所有登入使用者數列</code></div>
<div class="line number12 index11 alt1"><code class="py plain">login_users<span> </span></code><code class="py keyword">=</code><span> </span><code class="py plain">[]</code></div>
<div class="line number13 index12 alt2"><code class="py keyword">for</code><span> </span><code class="py plain">i<span> </span></code><code class="py keyword">in</code><span> </span><code class="py plain">cad_lines:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">line_list<span> </span></code><code class="py keyword">=</code><span> </span><code class="py plain">i.split(</code><code class="py string">" "</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">login_users.append(line_list[</code><code class="py value">0</code><code class="py plain">])</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#print(login_users)</code></div>
<div class="line number17 index16 alt2"><code class="py spaces"> </code> </div>
<div class="line number18 index17 alt1"><code class="py comments"># 根據 https://stackoverflow.com/questions/480214/how-do-i-remove-duplicates-from-a-list-while-preserving-order</code></div>
<div class="line number19 index18 alt2"><code class="py comments"># 數列去除重複元素但仍保持原始次序</code></div>
<div class="line number20 index19 alt1"><code class="py plain">login_users<span> </span></code><code class="py keyword">=</code><span> </span><code class="py functions">list</code><code class="py plain">(</code><code class="py functions">dict</code><code class="py plain">.fromkeys(login_users))</code></div>
<div class="line number21 index20 alt2"><code class="py comments">#print(login_users)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces"> </code> </div>
<div class="line number23 index22 alt2"><code class="py comments"># 建立數列存放符合條件的使用者</code></div>
<div class="line number24 index23 alt1"><code class="py plain">valid_users<span> </span></code><code class="py keyword">=</code><span> </span><code class="py plain">[]</code></div>
<div class="line number25 index24 alt2"><code class="py spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="py comments"># 取出符合條件的使用者</code></div>
<div class="line number27 index26 alt2"><code class="py keyword">for</code><span> </span><code class="py plain">line<span> </span></code><code class="py keyword">in</code><span> </span><code class="py plain">login_users:</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py keyword">if</code><span> </span><code class="py string">"cad"</code><span> </span><code class="py keyword">in</code><span> </span><code class="py plain">line:</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">        </code><code class="py comments"># 將 cad 字串去除</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">        </code><code class="py plain">user_number<span> </span></code><code class="py keyword">=</code><span> </span><code class="py plain">line.replace(</code><code class="py string">"cad"</code><code class="py plain">, "")</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">        </code><code class="py keyword">if</code><span> </span><code class="py plain">user_number<span> </span></code><code class="py keyword">in</code><span> </span><code class="py plain">user_lines:</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">            </code><code class="py plain">valid_users.append(user_number)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">             </code> </div>
<div class="line number34 index33 alt1"><code class="py comments"># 利用 reverse() 將 valid_users 反向排序</code></div>
<div class="line number35 index34 alt2"><code class="py plain">valid_users.reverse()</code></div>
<div class="line number36 index35 alt1"><code class="py spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="py comments"># , 最早登入者列在最前面</code></div>
<div class="line number38 index37 alt1"><code class="py keyword">for</code><span> </span><code class="py plain">user<span> </span></code><code class="py keyword">in</code><span> </span><code class="py plain">valid_users:</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(user)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h2>w4</h2>
<p>近端執行:</p>
<p>SciTE 與 Tiny C Compiler 若要設定為 Tools - Compile 之後產生可執行檔案 a.out, cpp.properties 設定檔案必須修改如下:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_931469">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">ccopts=-pedantic -Os</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor">#ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o</code></div>
<div class="line number4 index3 alt1"><code class="js plain">cc=tcc.exe -run</code></div>
<div class="line number5 index4 alt2"><code class="js plain">ccc=tcc.exe -o a.out</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="js plain">make.command=make</code></div>
<div class="line number8 index7 alt1"><code class="js preprocessor">#command.compile.*.c=$(ccc) -std=c99</code></div>
<div class="line number9 index8 alt2"><code class="js plain">command.compile.*.c=$(ccc) $(FileNameExt)</code></div>
<div class="line number10 index9 alt1"><code class="js plain">command.build.*.c=$(make.command)</code></div>
<div class="line number11 index10 alt2"><code class="js plain">command.build.*.h=$(make.command)</code></div>
<div class="line number12 index11 alt1"><code class="js plain">command.clean.*.c=$(make.command) clean</code></div>
<div class="line number13 index12 alt2"><code class="js plain">command.clean.*.h=$(make.command) clean</code></div>
<div class="line number14 index13 alt1"><code class="js preprocessor"># use tcc to run .c program</code></div>
<div class="line number15 index14 alt2"><code class="js preprocessor">#command.go.*.c=./$(FileName)</code></div>
<div class="line number16 index15 alt1"><code class="js plain">command.go.*.c=$(cc) $(FileNameExt)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>雲端執行:</p>
<p>範例:<span> </span><a href="https://replit.com/@wcms/cjavascriptpython">https://replit.com/@wcms/cjavascriptpython</a></p>
<p>將位於個人 Github 帳號下的 cp2023 倉儲 (建議以<span> </span><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a><span> </span>作為 template) import 進入 Replit, 以 git submodule update --init 取下子模組, 然後以 pip install flask flask_cors bs4 lxml pelican markdown gevent 安裝啟動編輯網站所需模組後, 將 config/config 密碼編碼移至 Secrets 頁面中的 config 變數後啟動.</p>
<p>修改 replit.nix 如下, 表示要安裝 gnuplot 套件:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_293382">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">  </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">    </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">  </code><code class="js plain">];</code></div>
<div class="line number5 index4 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>之後將所練習的 C 程式置於 downloads 目錄中, 其執行影像結果存入 images 後, 分別在網頁中引用.</p>
<p>Exercises:</p>
<p>請從 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼)與 <a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link">Introduction to C</a> (經由校園網路或 VPN 下載)電子書中各擷取 10 個 C 程式範例, 分別:</p>
<ol>
<li>在可攜程式環境中以 SciTE + Tiny C Compiler 編譯系統, 使用 Tools - Go 類編譯方式執行.</li>
<li>在可攜程式環境中以 SciTE + Tiny C Compiler 編譯系統, 使用 Tools - Compile 編譯連結後取得 a.out, 然後在命令列中以 a.out 執行.</li>
<li>在 Replit 全球資訊網 IDE 環境中的 Shell 頁面, 以 cc ex1.c 產生可執行檔案 a.out, 並以 ./a.out 執行, 或者以 cc ex1.c -o ex1 指定編譯連結後的可執行檔案名稱為 ex1 後, 以 ./ex1 執行.</li>
</ol>
<p>最後將所選擇的 C 程式範例執行過程與相關說明內容, 整理在<span>個人 github 帳號下的 cp2023 倉儲網頁</span>中的 c_ex 頁面中.</p>
<p>參考:</p>
<p>Introduction to the C programming Language (<a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec03.pdf">1</a>,<span> </span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec04.pdf">2</a>,<span> </span><a href="https://inst.eecs.berkeley.edu/~cs61c/su21/pdfs/lectures/fa20-trimmed/lec05.pdf">3</a>, or<span> </span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET9_kFFrXg1DslVFqcV9hRABUcxDKnKsdnPyB6nsQFQKdQ?e=k6DGWl">download with password</a>)</p>
<p>使用者輸入兩個整數後相加的 C 程式範例:</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_18033">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp comments">/* Read in two integers , add them and display the answer */</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#define _CRT_SECURE_NO_WARNINGS</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div>
<div class="line number4 index3 alt1"><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">main()</code></div>
<div class="line number5 index4 alt2"><code class="cpp plain">{</code></div>
<div class="line number6 index5 alt1"><code class="cpp color1 bold">int</code><span> </span><code class="cpp plain">this_is_a_number1, this_is_a_number2, total;</code></div>
<div class="line number7 index6 alt2"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Please enter an integer number:\n "</code><code class="cpp plain">);</code></div>
<div class="line number8 index7 alt1"><code class="cpp comments">/* read number in */</code></div>
<div class="line number9 index8 alt2"><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;this_is_a_number1) == 1) {</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">      </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, this_is_a_number1);</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}<span> </span></code><code class="cpp keyword bold">else</code><span> </span><code class="cpp plain">{</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Failed to read integer.\n"</code><code class="cpp plain">);</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"You entered %d\n"</code><code class="cpp plain">, this_is_a_number1);</code></div>
<div class="line number16 index15 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Please enter another number: \n"</code><code class="cpp plain">);</code></div>
<div class="line number17 index16 alt2"><code class="cpp keyword bold">if</code><span> </span><code class="cpp plain">(</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, &amp;this_is_a_number2) == 1) {</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">      </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, this_is_a_number1);</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}<span> </span></code><code class="cpp keyword bold">else</code><span> </span><code class="cpp plain">{</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">      </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Failed to read integer.\n"</code><code class="cpp plain">);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number22 index21 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"You entered %d\n"</code><code class="cpp plain">, this_is_a_number2);</code></div>
<div class="line number23 index22 alt2"><code class="cpp plain">total = this_is_a_number1 + this_is_a_number2;</code><code class="cpp comments">/* add two numbers */</code></div>
<div class="line number24 index23 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"total is %d\n"</code><code class="cpp plain">, total);</code></div>
<div class="line number25 index24 alt2"><code class="cpp keyword bold">return</code><span> </span><code class="cpp plain">0;</code></div>
<div class="line number26 index25 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h2>W3</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbXrVO6Jeb5Gnn47Dvpv7pYBftMz4z9evscZ-Spxxmk7mw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=RiZ5wB">有關電腦輔助設計室網路設定說明</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Eb1u9lGQSotOpxiJTQeFVwEBq-FxJEDTnTkuUL0jlGdnFQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=zcA6Qt">處理 .replit 與 replit.nix 中的舊 Python 設定問題</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EUVPlEOxYxdCkQyT9rX-B64BK_SNHRJaz52HloupubxlMw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=W03gHn">說明如何為 site-個人github帳號 倉儲設定 Github Pages</a></p>
<p>採用 Github Classroom 建立作業倉儲的問題:</p>
<p>2023/09/26 在 1a w3 課程進行到建立各學員 site 作業時發現, 將 Replit 導入 Github 倉儲的流程中, 所產生的系統間權限設定, 必須由 Github Classroom 管理帳號 (以 cp2023 為例, 附屬在 mdecp2023 帳號下), 針對各用戶所提出的個別 Replit 權限 requests (以 site-scrum-1 倉儲為例, 只能透過 Replit 提出控管 mdecp2023/site-scrum-1 倉儲的權限)<span> </span><span>逐一進行設定</span>.</p>
<p><img alt="" class="add_border" height="310" src="https://mde.tw/cpnote/images/mdecp2023_replit_requests.png" width="400"/></p>
<p>(上圖顯示共有三名用戶針對 mdecp2023 帳號下的 Github Classroom 倉儲提出 Replit 連線要求, 其中只有最上方用戶的 request 取得 mdecp2023/site-scrum-1 倉儲的維護權限, 其餘兩則 requests 則仍處於待審核階段. 意即若要讓各用戶整合 Replit,<span> </span><span>每一個 Github Classroom 作業, 管理者都必須手動處理超過兩百則的 requests</span>)</p>
<p>為去除管理者的手動設定負擔, 決定 2023 cp 與 cad 等課程將放棄使用 Github Classroom. 改為由各學員自行針對課程建立用來評分的課程倉儲與網站 (cp 課程建立 cp2023 倉儲, cad 課程則建立 cad2023 倉儲), 直接附屬在學員的 Github 帳號下, 後續的 submodule 設定與倉儲協同權限則統一由各學員自行負責.</p>
<h2>w2</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EflMzDYwTjdIm2KJB7SCYkwB1_6UTQ4mzUdDx-bwN22E8A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=ZN0EPP">說明安裝 Apps, 如何設定網路, 查驗是否正確連網</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ef4xqA-zGsxFlnrsIq1WhRQBt7HalMhjXLb5hzLRmprYOQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=a7Oaxo">說明如何利用近端可攜系統執行 C 程式, 如何利用 ChatGPT 進行對話</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZ97ogpobtpCv2BxYJfDGjEBgadG6gPZJYN5TbB7clrMtA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=PcbKn5">說明如何利用 Replit 協助編輯網頁內容</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EW-FcfDAaMZPjdA8nFjgCHEBpp8yPr7wSoi9RsxmyLbZpA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=E1T3vG">說明如何 connect Replit to Github, 如何建立個人網站並利用 Replit 啟動編輯網站</a></p>
<h2>w10</h2>
<p><span>項目1</span>到<span>項目3</span>就是各組必須在分組網站, 利用組員分工學習的方式, 將計算機程式的教學內容及作業進行整理. 且各組員所分配到的工作必須先在個人網站中整理後, 再放入各分組網站中.</p>
<p>w11: 針對 s1511 伺服器, 新增別名 (在 DNS 術語中稱為 CNAME) s, 因此可以透過<span> </span><a href="https://s.cycu.org/~pj2022/cpnote">https://s.cycu.org/~pj2022/cpnote</a><span> </span>擷取工作站室中的課堂筆記靜態網頁.</p>
<p>使用 Letsencrypy 中的<span> </span><span>certbot certonly -d s1511.cycu.org -d s.cycu.org</span><span> </span>指令, 執行之前可以利用 sudo /etc/init.d/nginx stop 關掉 nginx, 並在上述擴充網域數位簽章的過程, 讓 certbot 指令啟動 local web server 進行主機認證, 即透過登記在 DNS 伺服器中的 IPv6 address 確認主機位址.</p>
<p>擴增伺服器別名後, 以 sudo /etc/init.d/nginx start 重新啟動全球資訊網伺服器, 並且以 sudo /etc/init.d/stunnel4 restart 重新啟動 https 代理伺服器.</p>
<p><span>項目1</span>: 如何快速設定電腦輔助設計室中的網路 - 採 IPv6 網路設定.</p>
<p>請檢查隨身碟中的網路設定程式, 確認帶有可攜程式環境以及網路設定相關檔案.</p>
<p>目的是能夠在啟動隨身系統之後, 可以透過 rsa private key 以 SSH 取下個人倉儲, 並能啟動編輯後轉檔, 擁有推送回 github 的權限.</p>
<p>各組組長能夠在取下分組倉儲後, 以個人 IPv6 位址啟動後, 允許分組組員登入修改網頁內容, 並透過組長的 rsa private key 推送回 github.</p>
<p>個人與分組組員能在近端編寫 C 程式, 完成編譯連結後將程式碼與結果放入網頁, 並編寫相關心得報告.</p>
<p>以上近端操作流程, 也可以在 s1511 與 Replit 伺服器上進行個人與分組倉儲及網頁的改版.</p>
<p><a href="https://mde.tw/cpnote/downloads/w11_1a.7z">w11_1a.7z</a> (第十一週 1a 上課時建立的共用網路設定檔案)</p>
<p><span>wink_ffmpeg.reg 設定檔案內容:</span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_774808">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Windows Registry Editor Version 5.00</code></div>
<div class="line number2 index1 alt1"><code class="js spaces"> </code> </div>
<div class="line number3 index2 alt2"><code class="js plain">[HKEY_CURRENT_USER\SOFTWARE\Debugmode]</code></div>
<div class="line number4 index3 alt1"><code class="js spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="js plain">[HKEY_CURRENT_USER\SOFTWARE\Debugmode\Wink\Settings]</code></div>
<div class="line number6 index5 alt1"><code class="js string">"FfmpegPath"</code><code class="js plain">=</code><code class="js string">"y:\\ffmpeg.exe"</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><a href="https://mde.tw/cadnote/downloads/2a_w10_start_ipv6_wink_reg.7z">2a_w10_start_ipv6_wink_reg.7z</a><span> </span>(可以將此<span> </span><span>wink 登錄設定檔</span>, 連同<span>網路設定</span>,<span> </span><span>Zoomit 啟動</span>與<span> </span><span>putty setting</span><span> </span>設定, 以<span> </span><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/reg-import">reg import</a><span> </span>指令整合至 tinyc 可攜程式系統的 start_ipv6.bat 中).</p>
<p><span>以下為設定 w11_1a.mp4 的過程 (<a href="https://mde.tw/cpnote/downloads/w11_1a_1.txt">w11_1a_1.txt</a></span><span>):</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-mce-fragment="1" data-varname="winkVideoData_w11_1a_1" height="630" muted="true" width="1008"></video></div>
<p>w11_1b_1 操作影片,<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ETwcHtj1JA1JqynzTDnVwdoB5wLg1ZyLWDMEj0DUTXHGYQ?e=gdN1Hg">w11_1b.wnk 下載</a><span> </span>(需要密碼)</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-mce-fragment="1" data-varname="winkVideoData_w11_1b_1" height="630" muted="true" width="1008"></video></div>
<p>w11_1a 已經登入 s.cycu.org 的學員名單: <a href="https://mde.tw/cpnote/downloads/w11_1a_s_server_login.txt">w11_1a_s_server_login.txt</a>, 請問<span>如何</span>按照學號列出 w11 已經會登入 s.cycu.org 的學員名單? (<a href="https://mde.tw/cpnote/downloads/w11_1b_s_server_login.txt">w11_1b_s_server_login.txt</a>)</p>
<p>已知: semester 變數,  1121 為 112 學年第 1 學期</p>
<p>courseno 變數, 1a:<span> </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0813&amp;column=True">0813</a>, 1b:<span> </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0826&amp;column=True">0826</a>, 2a:<span> </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0838&amp;column=True">0838</a>, 2b:<span> </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0851&amp;column=True">0851</a> (以 demo 帳號 AT stud.cycu.org 中的<span> </span><a href="https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions">nfulist</a><span> </span>網際程式直接進入學校教務主機擷取修課學員名單.)</p>
<p>使用 Brython 讀取登入歷程記錄檔案後, 可以<a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/cd771830cae634d399bb69b5c60daaf1c6c3669f/w11_1a_read_last_w.py">按照時間先後次序列出登入者名單</a>.</p>
<p>也可以按照學號排序, 列出<span> </span><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/5ea1b4b6aaa71e1054611c1e41d5fe752315867b/w11_1a_read_last_w.py">w11 已經登入 s1511 主機的 1a 學員名單</a>(即時執行)或將資料取出: <a href="https://mde.tw/cpnote/downloads/w11_1a_login_s1511_users.txt">w11_1a_login_s1511_users.txt</a> (<a href="https://mde.tw/cpnote/downloads/w11_1b_login_s1511_users.txt">w11_1b_login_s1511_users.txt</a>)</p>
<p>接下來該如何利用程式方法, 得知使用者已經設定 rsa keys? </p>
<p>假如能夠使用程式進入 s.cycu.org 讀取各用戶的 .ssh/id_rsa.pub, 就可以知道是否該用戶已經建立 rsa keys. 但是必須在 s.cycu.org 主機中設法建立網際程式, 並參考<a href="https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions">這裡</a>的說明, 就可以根據各班學員名單逐一進入各用戶的目錄查驗其帳號下是否已經建立 id_rsa.pub 檔案.</p>
<hr/>
<p><span>項目2</span>: 請分別利用 Replit、s1511.cycu.org 或 localhost 維護個人與分組的網站內容, 並比較不同方法開發計算計程式的優缺點.</p>
<p><span>Replit</span><span> </span>必須先在 Github 安裝 Replit Application 授權之後, 再 import 倉儲.</p>
<p>import 倉儲後, 必須先設定 Run 執行內容, 取下 submodule, 並安裝倉儲編輯所需的模組以及設定 secrets 頁面中的 config 變數後, 才能啟動編輯網頁.</p>
<p><span>s1511</span><span> </span>則需要先設定 keys 與 session config, 然後才能將倉儲以 SSH clone 至個人帳號下, 修改個人或分組所分配到的內部連網埠號後, 以 python3 server.py 執行網頁編輯. 也可透過 acp 設法讓動態與靜態網站內容同步.</p>
<p><span>localhost</span><span> </span>則可以使用 s1511 中的 private key, 經由 puttygen 轉檔後使用, 以 SSH clone 至個人隨身碟後, 可以利用 cms 啟動編輯網站, 修改內容並轉為靜態網站後, 以 acp 將改版資料新增提交推送到 Github. 若修改倉儲中的 init.py, 置入所在電腦的外部 IPv6 位址, 則可以 cms 啟動後, 修改管理者密碼, 讓其他組員連線至所啟動的動態或靜態網站內容.</p>
<p>各學員在以上採多個不同方式維護個人與分組網站的過程, 可以在改版之前先行 git pull, 以減少合併的內容.</p>
<p>在 Windows 使用 pelican 建立網誌必須 pip install tzdata, 否則無法取得 TIMEZONE 設定.</p>
<p><span>項目3</span>: 程式練習:</p>
<p><span>w8 之前所指令的程式 C 練習作業</span>:</p>
<p><a href="https://mde.tw/cpnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html">上課內容</a>中的 Exercises</p>
<p><a href="https://mde.tw/cpnote/content/w2-w5.html">w2-w5</a><span> </span>週任務中的 Exercises</p>
<p><a href="https://mde.tw/cpnote/content/w6-w7.html">w6-w7</a><span> </span>週任務中的練習一與練習二</p>
<p>請利用 C 結合 gd 繪圖程式庫, 畫出<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_China">PROC</a>(<a href="https://en.wikipedia.org/wiki/Flag_of_China#/media/File:Flag_of_China_(construction_sheet).svg">規格</a>),<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_Kingdom">United Kingdom</a>(<a href="https://en.wikipedia.org/wiki/Flag_of_the_United_Kingdom#/media/File:Flag_of_the_United_Kingdom_(1-2)_(construction_sheet).svg">規格</a>),<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_Japan">Japan</a>(<a href="https://en.wikipedia.org/wiki/Flag_of_Japan#/media/File:Construction_sheet_of_the_Japanese_flag_EN.svg">規格</a>)與<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_South_Korea">South Korea</a>(<a href="https://en.wikipedia.org/wiki/Flag_of_South_Korea#/media/File:Flag_of_South_Korea_(construction_sheet).svg">規格</a>) Flags.</p>
<p>參考:</p>
<p><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/2656b22351c7784cf50380a1095aa4821c728166/cp2023_roc_flag.py">ROC flag</a> in Brython,<span> </span><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/53f31755db24d1acc04036f808f5a4f276648e61/cp2023_proc_flag.py">PROC flag</a><span> </span>in Brython,<span> </span><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/8c5cd1cde1d51d6d31f7ed39d462d71409394143/cp2023_usa_flag.py">USA flag</a><span> </span>in Brython.</p>
<p>graphics library examples:<span> </span><a href="https://github.com/libgd/libgd/tree/master/examples">1</a>,<span> </span><a href="https://libgd.github.io/">2</a>,<span> </span><a href="https://github.com/nayuki/QR-Code-generator/tree/master/c">3</a>,<span> </span><a href="https://github.com/ricmoo/QRCode">4</a>.</p>
<p>各分組成員協同將<span> </span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼) 內容整理後, 放入各分組網站.</p>
<p><span>上述以 C 語言編寫的程式, 假如採用 Javascript 或 Python 語言編寫, 對於機械與機電整合設計工程師, 分別有那些不同的應用範圍?</span></p>
<p><span>w9 程式練習</span>:</p>
<p>2b w8 作業: 請根據 <a href="https://mde.tw/cadnote/downloads/cad2023_2b_w8.txt">cad2023_2b_w8.txt</a> 檔案中的內容, 透過程式的讀取與篩選, 按照時間先後, 列出 2b 修課學員中已經登入 s1511.cycu.org 的學號. (修課學員名單 2a: <a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0838&amp;column=True">0838</a>, 2b: <a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0851&amp;column=True">0851</a>)</p>
<p>假如在近端處理, 必須同時儲存兩個檔案後, 進行資料選取:</p>
<p><a href="https://mde.tw/cpnote/downloads/get_stud_num_from_last_data.py">get_stud_num_from_last_data.py</a> (若採 Brython 編寫, 可以直接<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/f9f2fd6819ae9553d51990901aa694073d51439a/get_stud_num_from_last_data.py">列出結果</a>, 依照登入時間先後排序, 其中 41123227 為管理者最早測試時登入, 若採用 ANSI 編寫:<span> </span><a href="https://mde.tw/cpnote/downloads/c_parse_last_cp2023.7z">c_parse_last_cp2023.7z</a>)</p>
<hr/>
<p>1a 上課時所建立的檔案 (已經在 w10 2b 上課時改為系上 DNS 設定):</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ER4EWo4ulCRJhdNs0l9d1tsBek7ejh2UQbroue_ue0NnHg?e=yvGgge">cadlab_network_setting.7z</a><span> </span>(需要下載密碼) - 電腦輔助設計室網路設定批次與 Powershell 檔案 (註: 使用中華電信 IPv6 DNS 設定, w10 星期四之後無法在校網使用 hinet IPv6 DNS server 設定).</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ESCcmplVTVxJnJYZ2pJWh-oBFWsDJxxSYzVh_5LD5Oa5Gg?e=1EysLk">w10_2b_cadlab_network_setting.7z</a><span> </span>(需要下載密碼) - 電腦輔助設計室網路設定批次與 Powershell 檔案.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5P-1cv-y1Ih5zFT9LyTy0B6vGwNfDVlXYescPWAcMliw?e=LTUnq7">tinyc.7z</a><span> </span>(需要下載密碼) - 使用 Tiny C Compiler 編譯 C 程式, 包含 gd 與 gnuplot.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYLeiM_NMzFHiKnUWpcO9pwBHxwDNjNDC-4F3h_d761wMQ?e=NMdPpv">python3114_git_putty.7z</a><span> </span>(需要下載密碼) - 將近端 cmsimde 啟動並改版後推向 Github 所需的檔案.</p>
<hr/>
<p>線上簡報、網誌與多媒體影片製作工具:</p>
<p><a href="https://leo-editor.github.io/leo-editor/">Leo Editor</a><span> </span>(<a href="https://groups.google.com/g/leo-editor">討論群組</a>) 為大綱管理系統, 可以當作程式開發的 IDE (Integrated Development Environment) 使用, 可用來編輯 reveal.js 簡報檔案中的 html 與 markdown, 也可用來編輯 Pelican 網誌 markdown 與轉檔, 並且在電腦輔助設計與分析過程中, 可以用來解讀 CoppeliaSim XML 格式檔案.</p>
<p>因為 Python 3.12.0 環境下 Leo Editor 還無法正常透過 pip 安裝, 因此必須手動安裝 PyQt5 之後, 再使用 pip install leo, 所完成的 Python 3.12.0: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYf6RiAqXAFJllAizi_-iZ4BT9ZEn8-bT2V8TVjd9p446Q?e=NSCciC">Python312_leo_664_PyQt5.7z</a><span> </span>(需要下載密碼)</p>
<p><a href="https://www.debugmode.com/wink.html">Wink</a><span> </span>為操作流程影片製作套件, 可以在電腦操作過程, 儲存關鍵頁面與滑鼠點擊區域後, 加上輔助文字說明後製作成 mp4 影片檔.</p>
<p><a href="https://github.com/ShareX/ShareX/releases">ShareX</a><span> </span>為螢幕畫面取像或錄影套件, 可以擷取電腦畫面任一區域存為影像檔, 或者結合語音說明與滑鼠操作錄製說明影片.</p>
<p><a href="https://github.com/obsproject/obs-studio/releases">OBS</a><span> </span>為電腦廣播製作系統, 可以結合各種語音、圖像與影片製作出多元的電腦操作說明影片.</p>
<p>Wink 與 ShareX 都需要<span> </span><a href="https://ffmpeg.org/download.html#build-windows">ffmpeq.exe</a>.</p>
<h2>w12</h2>
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div>
<div class="line number4 index3 alt1"><code class="cpp plain">{</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"hello world\n"</code><code class="cpp plain">);</code></div>
<div class="line number6 index5 alt1"><code class="cpp plain">}</code></div>
<div class="line number1 index0 alt2"><code class="cpp preprocessor"><img alt="" height="600" src="/images/螢幕擷取畫面 2023-12-28 213724.png" width="541"/></code></div>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">	#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
int main() {
    int width = 800;
    int height = 600;
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    FILE *outputFile = fopen("hellogd.png", "wb");
    if (outputFile == NULL) {
 
fprintf(stderr, "Error opening the output file.\n");
 
return 1;
    }
    
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int blue = gdImageColorAllocate(img, 0, 0, 255);
    int black = gdImageColorAllocate(img, 0, 0, 0);
    int white = gdImageColorAllocate(img, 255, 255, 255);
    // 長方形塗色
    gdImageFilledRectangle(img, 0, 0, width, height, white);
    gdImageFilledRectangle(img, 0, 0, (int)width/4, (int)height/4, blue);
    // 橢圓形塗色
    gdImageFilledEllipse(img, (int)width*3/4, (int)height/4, (int)width/4, (int)width/4, red);
    // 橢圓形畫線
    gdImageEllipse(img, (int)width*3/4, (int)height*3/4, (int)width/4, (int)width/4, red);
    // 畫直線
    gdImageLine(img, (int)width/2, (int)height/2, (int)width/2, (int)height/2 + 100, blue);
    
    // 多邊形畫線
    gdPoint points[4];
    points[0].x = (int)width/4;
    points[0].y = (int)height*3/4;
    points[1].x = points[0].x + 100;
    points[1].y = points[0].y;
    points[2].x = points[1].x;
    points[2].y = points[1].y + 100;
    points[3].x = points[2].x - 100;
    points[3].y = points[2].y;
    gdImagePolygon(img, points, 4, black);
    
    // 多邊形塗色
    gdPoint points2[4];
    points2[0].x = (int)width/3;
    points2[0].y = (int)height/2;
    points2[1].x = points2[0].x + 100;
    points2[1].y = points2[0].y;
    points2[2].x = points2[1].x;
    points2[2].y = points2[1].y + 100;
    points2[3].x = points2[2].x - 150;
    points2[3].y = points2[2].y;
    gdImageFilledPolygon(img, points2, 4, red);
 
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}</pre>
<p><br/><img alt="" height="300" src="/images/hellogd.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">gdhello2.c

#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

// Declare the rotation function
void rotateFilledPolygon(int x_orig, int y_orig, double rotation_ang, gdPoint *points, int num_points) {
int i;
double angle_rad = rotation_ang * M_PI / 180.0;

for (i = 0; i &lt; num_points; i++) {
int x = points[i].x - x_orig;
int y = points[i].y - y_orig;

points[i].x = x_orig + (int)(x * cos(angle_rad) - y * sin(angle_rad));
points[i].y = y_orig + (int)(x * sin(angle_rad) + y * cos(angle_rad));
}
}

int main() {
int width = 800;
int height = 600;

gdImagePtr img = gdImageCreateTrueColor(width, height);
gdImageAlphaBlending(img, 0);

FILE *outputFile = fopen("hellogd2.png", "wb");
if (outputFile == NULL) {
fprintf(stderr, "Error opening the output file.\n");
return 1;
}

int red = gdImageColorAllocate(img, 255, 0, 0);
int blue = gdImageColorAllocate(img, 0, 0, 255);
int black = gdImageColorAllocate(img, 0, 0, 0);
int white = gdImageColorAllocate(img, 255, 255, 255);

gdImageFilledRectangle(img, 0, 0, width, height, white);
gdImageFilledRectangle(img, 0, 0, (int)width / 4, (int)height / 4, blue);

gdImageFilledEllipse(img, (int)width * 3 / 4, (int)height / 4, (int)width / 4, (int)width / 4, red);
gdImageEllipse(img, (int)width * 3 / 4, (int)height * 3 / 4, (int)width / 4, (int)width / 4, red);
gdImageLine(img, (int)width / 2, (int)height / 2, (int)width / 2, (int)height / 2 + 100, blue);

gdPoint points[4];
points[0].x = (int)width / 4;
points[0].y = (int)height * 3 / 4;
points[1].x = points[0].x + 100;
points[1].y = points[0].y;
points[2].x = points[1].x;
points[2].y = points[1].y + 100;
points[3].x = points[2].x - 100;
points[3].y = points[2].y;

// Call the rotation function multiple times
for (int i = 0; i &lt; 4; i++) {
rotateFilledPolygon((int)width / 4 + 50, (int)height * 3 / 4 + 50, 30.0, points, 4);
gdImagePolygon(img, points, 4, black);
}

gdPoint points2[4];
points2[0].x = (int)width / 3;
points2[0].y = (int)height / 2;
points2[1].x = points2[0].x + 100;
points2[1].y = points2[0].y;
points2[2].x = points2[1].x;
points2[2].y = points2[1].y + 100;
points2[3].x = points2[2].x - 150;
points2[3].y = points2[2].y;

// Call the rotation function multiple times
for (int i = 0; i &lt; 12; i++) {
//rotateFilledPolygon((int)width / 3 + 50, (int)height / 2 + 50, 30.0, points2, 4);
rotateFilledPolygon(500, 200, 30.0, points2, 4);
gdImageFilledPolygon(img, points2, 4, red);
}

gdImagePngEx(img, outputFile, 9);
fclose(outputFile);
gdImageDestroy(img);

return 0;
}

</pre>
<p><br/><img alt="" height="300" src="/images/hellogd2.png" width="400"/></p>
<h2>w13</h2>
<p>在計算機課程中學到了許多電腦內部網路的設定，以及用程式撰寫出一些有特定含義圖形，這門課程將來也能運用在很多資訊類的地方可以用程式快速成型。</p>
<h2>w15</h2>
<p># Basque的小遊戲</p>
<p>Basque is a cross-platform top-down 2d game engine.</p>
<p>---</p>
<p>Running on Windows:</p>
<p>![Basque Windows demo](demos/basque_windows_demo.gif "Basque Windows demo")</p>
<p>Running on Mac:</p>
<p>![Basque Mac demo](demos/basque_mac_demo.gif "Basque Mac demo")</p>
<p>Running on Linux:</p>
<p>![Basque Linux demo](demos/basque_linux_demo.gif "Basque Linux demo")</p>
<p>Running in your browser (thanks to WebAssembly and Emscripten):</p>
<p>![Basque Wasm demo](demos/basque_wasm_demo.gif "Basque Wasm demo")</p>
<p>[Play Basque Wasm](https://htmlpreview.github.io/?https://cdn.jsdelivr.net/gh/ryanpcmcquen/basque@master/wasm/basque.html "Play Basque Wasm")</p>
<p>Now with touch controls!</p>
<p>---</p>
<p>Packages for all platforms are available under the GitHub Action here:</p>
<p>[![Compiling ...](https://github.com/ryanpcmcquen/basque/workflows/Compiling%20.../badge.svg)](https://github.com/ryanpcmcquen/basque/actions)</p>
<p>Or on Itch:</p>
<p>https://ryanpcmcquen.itch.io/basque</p>
<p>---</p>
<p>Too lazy to do local setup? You can give it a spin using Gitpod or Replit, the only downfall will be lack of audio.</p>
<p>[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/ryanpcmcquen/basque)</p>
<p>[![Run on Replit](https://replit.com/badge/github/ryanpcmcquen/basque)](https://replit.com/github/ryanpcmcquen/basque)</p>
<p>---</p>
<p>#### Global keyboard shortcuts:</p>
<p>&lt;kbd&gt;↑&lt;/kbd&gt;: Move player North</p>
<p>&lt;kbd&gt;→&lt;/kbd&gt;: Move player East</p>
<p>&lt;kbd&gt;↓&lt;/kbd&gt;: Move player South</p>
<p>&lt;kbd&gt;←&lt;/kbd&gt;: Move player West</p>
<p>&lt;kbd&gt;q&lt;/kbd&gt;: Quit</p>
<p>&lt;kbd&gt;e&lt;/kbd&gt;: Toggle edit mode</p>
<p>#### Edit mode shortcuts:</p>
<p>&lt;kbd&gt;l&lt;/kbd&gt;: Toggle map library</p>
<p>&lt;kbd&gt;Mouse button 1&lt;/kbd&gt; (left click): Place tile</p>
<p>&lt;kbd&gt;Mouse button 2&lt;/kbd&gt; (right click): Select tile</p>
<p>---</p>
<p>### Why do this?</p>
<p>Why not just use Godot/Unity/et cetera? Basque has a very different priority list than these engines. It is _not_ a generic engine. There isn't much here, but it is a good starting point if you are looking to roll your own engine, here is what it does:</p>
<p>- Compiles cross platform (Linux/Mac/Windows/WebAssembly, see [Esoteric ports](#esoteric-ports) for other platforms).<br/>- Visual map editing (with an easy to understand plain text format).<br/>- Spritesheet animation.<br/>- Background music.<br/>- Scrolling.<br/>- Collision detection.<br/>- Rudimentary frame rate limiting.<br/>- Accepts command line arguments (currently only for enabling fullscreen mode).<br/>- Resolution detection (estimates window size to 80% of the screen or uses the full resolution for fullscreen mode, this can be switched off).<br/>- High DPI awareness. By default the game will not run in high DPI mode, but it will be aware of high DPI contexts. This prevents things from looking fuzzy with weird scaling settings.<br/>- Automated GitHub and GitLab packaging pipelines.<br/>- Scancode based movement (rather than event loop key states). This keeps the controls from being susceptible to operating system key repeat rates and delays.<br/>- Unicode (UTF-8) file path support.</p>
<p>Everything that is here should not be considered a final or optimal solution, but rather, a simple approach that can be morphed into a better solution. At this point the engine will become more specific to the game I am building, which is why I see this as the best time to open source it. Hopefully, it can be useful to others, either as a starting point, or as a reference of some things you can accomplish with SDL2.</p>
<p>---</p>
<p>### Map editing/layouts/attributes:</p>
<p>The current map system utilizes three main files:</p>
<p>- [map_attributes.txt](assets/data/map_attributes.txt)<br/>- [map_layout.txt](assets/data/map_layout.txt)<br/>- [map_library.txt](assets/data/map_library.txt)</p>
<p>While editing the map, you may use the visual map editor (available in `DEBUG_MODE` by pressing &lt;kbd&gt;e&lt;/kbd&gt;) or edit the text files directly. Basque checks the timestamps of the files, and will reload them if they change, you do not need to recompile or relaunch Basque to do this. `map_layout.txt` also has suffixed versions created, with the intention of supporting future redo/undo functionality. The current number of versions that are kept is 100. This is of course, configurable.</p>
<p>`map_attributes.txt` follows the following format (all items are integers):</p>
<p>```<br/>TILE_INDEX:<br/>{ X_CLIP, Y_CLIP }, { NORTH_BORDER, EAST_BORDER, SOUTH_BORDER, WEST_BORDER },<br/>```</p>
<p>Comments preceded with `//` in the attributes file are allowed. The other file types do not allow comments.</p>
<p>`map_layout.txt` and `map_library.txt` are comma separated integers, representing the tile indices. Newlines represent new rows.</p>
<p>For example:</p>
<p>```<br/>0, 1, 2, 3, 4, 1, 5, _<br/>27, 16, 16, 16, 16, 16, 17, _<br/>27, 16, 16, 16, 16, 16, 17, _<br/>27, 16, 28, 16, 16, 16, 17, _<br/>```</p>
<p>The visual map editor (available in `DEBUG_MODE` by pressing &lt;kbd&gt;e&lt;/kbd&gt;) automatically writes the indices with even spacing. `_` is a shortcut for a blank tile (the index for which is configurable under `configuration.h`).</p>
<p>`map_library.txt` is intended to be a resource for picking tiles (available in `DEBUG_MODE -&gt; EDIT_MODE` by pressing &lt;kbd&gt;l&lt;/kbd&gt;), while editing the world map (`map_layout.txt`). It has a few special properties. It will not show the player, and it always appears starting at the top left corner of the screen. It is also _not_ editable by the map editor.</p>
<p>---</p>
<p>### Basque currently requires:</p>
<p>- SDL2<br/>- SDL2_image<br/>- SDL2_mixer<br/>- SDL2_ttf</p>
<p>---</p>
<p>### Getting SDL2 installed:</p>
<p>#### Linux:</p>
<p>##### apt:</p>
<p>```<br/>sudo apt-get install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev<br/>```</p>
<p>##### dnf:</p>
<p>```<br/>sudo dnf install SDL2-devel SDL2_image-devel SDL2_mixer-devel SDL2_ttf-devel<br/>```</p>
<p>##### eopkg:</p>
<p>```<br/>sudo eopkg install sdl2-devel sdl2-image-devel sdl2-mixer-devel sdl2-ttf-devel<br/>```</p>
<p>##### nix:</p>
<p>```<br/>nix-env --install SDL2 SDL2_image SDL2_mixer SDL2_ttf<br/>```</p>
<p>Or whatever the equivalent package is for your distro.</p>
<p>#### Mac:</p>
<p>```<br/>brew install sdl2 sdl2_image sdl2_mixer sdl2_ttf<br/>```</p>
<p>#### Windows:</p>
<p>Run the script here: [install_sdl_on_windows.cmd](install_sdl_on_windows.cmd)</p>
<p>---</p>
<p>Or follow one of the below procedures:</p>
<p>##### Cmd or Powershell:</p>
<p>```<br/>nuget install sdl2.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\<br/>nuget install sdl2_image.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\<br/>nuget install sdl2_mixer.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\<br/>nuget install sdl2_ttf.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\<br/>```</p>
<p>```<br/>mkdir C:\INCLUDE\SDL2\</p>
<p>:: Headers:<br/>robocopy C:\INCLUDE\sdl2.nuget\build\native\include\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_image.nuget\build\native\include\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_mixer.nuget\build\native\include\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_ttf.nuget\build\native\include\ C:\INCLUDE\SDL2\</p>
<p>:: Libs:<br/>robocopy C:\INCLUDE\sdl2.nuget\build\native\lib\x64\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_image.nuget\build\native\lib\x64\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_mixer.nuget\build\native\lib\x64\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_ttf.nuget\build\native\lib\x64\ C:\INCLUDE\SDL2\</p>
<p>:: DLLs:<br/>robocopy C:\INCLUDE\sdl2.nuget.redist\build\native\bin\x64\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_image.nuget.redist\build\native\bin\x64\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_mixer.nuget.redist\build\native\bin\x64\ C:\INCLUDE\SDL2\<br/>robocopy C:\INCLUDE\sdl2_ttf.nuget.redist\build\native\bin\x64\ C:\INCLUDE\SDL2\<br/>```</p>
<p>#### Cmd or Powershell as admin:</p>
<p>```<br/>:: System DLLs:<br/>robocopy C:\INCLUDE\sdl2.nuget.redist\build\native\bin\x64\ C:\Windows\System32\ *.dll<br/>robocopy C:\INCLUDE\sdl2.nuget.redist\build\native\bin\x64\ C:\Windows\SysWOW64\ *.dll</p>
<p>robocopy C:\INCLUDE\sdl2_image.nuget.redist\build\native\bin\x64\ C:\Windows\System32\ *.dll<br/>robocopy C:\INCLUDE\sdl2_image.nuget.redist\build\native\bin\x64\ C:\Windows\SysWOW64\ *.dll</p>
<p>robocopy C:\INCLUDE\sdl2_mixer.nuget.redist\build\native\bin\x64\ C:\Windows\System32\ *.dll<br/>robocopy C:\INCLUDE\sdl2_mixer.nuget.redist\build\native\bin\x64\ C:\Windows\SysWOW64\ *.dll</p>
<p>robocopy C:\INCLUDE\sdl2_ttf.nuget.redist\build\native\bin\x64\ C:\Windows\System32\ *.dll<br/>robocopy C:\INCLUDE\sdl2_ttf.nuget.redist\build\native\bin\x64\ C:\Windows\SysWOW64\ *.dll<br/>```</p>
<p>##### Old school:</p>
<p>1. Download the latest VC development files from: https://libsdl.org</p>
<p>2. Place the entire contents of `include` and `lib` under `C:\INCLUDE\SDL2`.</p>
<p>3. Copy all DLLs under `lib` to `C:\Windows\System32` and `C:\Windows\SysWOW64`.</p>
<p>4. Repeat for _SDL2_image_, _SDL2_mixer_, and _SDL2_ttf_.</p>
<p>5. Profit.</p>
<p>---</p>
<p>### Compiling:</p>
<p>#### Linux &amp; Mac:</p>
<p>```<br/>make<br/>```</p>
<p>#### Windows:</p>
<p>```<br/>nmake<br/>```</p>
<p>---</p>
<p>### Packaging:</p>
<p>To produce a zip containing the binary and all assets, run the below commands.</p>
<p>This should run on any system, as it includes SDL2 and the like,<br/>but every system is different, so nothing is guaranteed.</p>
<p>#### Linux:</p>
<p>```<br/>make &amp;&amp; make --always-make linux<br/>```</p>
<p>#### Mac:</p>
<p>```<br/>make &amp;&amp; make --always-make mac<br/>```</p>
<p>#### Windows:</p>
<p>```<br/>nmake &amp;&amp; nmake /a windows<br/>```</p>
<p>#### WebAssembly (requires emsdk: https://github.com/emscripten-core/emsdk):</p>
<p>```<br/>make --always-make wasm<br/>```</p>
<p>---</p>
<p>### Running:</p>
<p>After [compiling](#compiling) for your platform, you can launch with `./basque` (or `basque.exe` on Windows). Passing `-f` or `--fullscreen` will launch the app in fullscreen, rather than the resolution specified in [configuration.h](source/configuration.h).</p>
<p>### Esoteric ports:</p>
<p>**BSD**:</p>
<p>![Basque on BSD](https://user-images.githubusercontent.com/772937/91080734-f26c7400-e5fa-11ea-91bd-a1b00f589326.jpg "Basque on BSD")</p>
<p>**Pocketchip**:</p>
<p>![Basque on a PocketCHIP](https://user-images.githubusercontent.com/772937/91081932-bf2ae480-e5fc-11ea-8f92-d393e08b007a.gif "Basque on a PocketCHIP")</p>
<p>**Haiku**:</p>
<p>![Basque on Haiku](https://user-images.githubusercontent.com/772937/93433807-26def300-f87c-11ea-8b75-166ba7297b4f.png)<br/>![Basque on Haiku](https://user-images.githubusercontent.com/772937/93433806-26465c80-f87c-11ea-824a-6afd19c35cc3.png)</p>
<p>**AmigaOS 4.1**:</p>
<p>![Basque on AmigaOS](https://user-images.githubusercontent.com/82057491/113767469-63deda00-9727-11eb-924d-49f895713ca8.png)</p>
<p>Thanks to [seventhwonder-amiga](https://github.com/seventhwonder-amiga)!</p>
<p>**Nintendo Switch**:</p>
<p>![Basque on Nintendo Switch](https://user-images.githubusercontent.com/88618327/131042085-efa210ad-d69b-4e9a-b1ae-56c5ba966a05.jpg)</p>
<p>Thanks to [fontire](https://github.com/fontire)!</p>
<p>#### In progress:</p>
<ul>
<li>ReactOS<br/>- Solaris<br/>- TempleOS</li>
</ul>
<p></p>
<p><img alt="" height="330" src="/images/w15.png" width="400"/></p>
<h1>replit</h1>
<p>在 Replit C 程式環境中額外納入 gnuplot 套件的 replit.nix 設定:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_65931">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.sudo</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.clang_12</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.ccls</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.gdb</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.gnumake</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">];</code></div>
<div class="line number10 index9 alt1"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>C with gnuplot:</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_910520">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number4 index3 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Open a file to write displacement and velocity data</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"motion_data.txt"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!outputFile) {</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to create data file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Simulate motion for 10 seconds and calculate displacement and velocity, while writing data to the file</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">x = 0.2;  </code><code class="cpp comments">// Initial displacement</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">v = 0.0;  </code><code class="cpp comments">// Initial velocity</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">dt = 0.01; </code><code class="cpp comments">// Time step</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">t = 0.0;  </code><code class="cpp comments">// Time</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code> <code class="cpp plain">(t &lt;= 10.0) {</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">double</code> <code class="cpp plain">acceleration = (-10.0 * x - 0.5 * v) / 1.0; </code><code class="cpp comments">// Modified system parameters here</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp plain">v += acceleration * dt;</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">        </code><code class="cpp plain">x += v * dt;</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(outputFile, </code><code class="cpp string">"%lf %lf %lf\n"</code><code class="cpp plain">, t, x, v);</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">        </code><code class="cpp plain">t += dt;</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close the data file</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number29 index28 alt2"> </div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Start a Gnuplot process using popen</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*gnuplotPipe = popen(</code><code class="cpp string">"gnuplot -persistent"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!gnuplotPipe) {</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to start Gnuplot.\n"</code><code class="cpp plain">);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Use Gnuplot plotting commands, specify font and output as PNG</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set terminal pngcairo enhanced font 'default,10' size 800,400\n"</code><code class="cpp plain">);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set output 'motion_plot.png'\n"</code><code class="cpp plain">);</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set title 'Displacement and Velocity vs. Time'\n"</code><code class="cpp plain">);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set xlabel 'Time (s)'\n"</code><code class="cpp plain">);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set ylabel 'Displacement (m)'\n"</code><code class="cpp plain">);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, "plot </code><code class="cpp string">'motion_data.txt'</code> <code class="cpp keyword bold">using</code> <code class="cpp plain">1:2 with lines lw 2 title </code><code class="cpp string">'Displacement'</code><code class="cpp plain">, \</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">                             </code><code class="cpp string">'motion_data.txt'</code> <code class="cpp keyword bold">using</code> <code class="cpp plain">1:3 with lines lw 2 title </code><code class="cpp string">'Velocity'</code><code class="cpp plain">\n");</code></div>
<div class="line number45 index44 alt2"> </div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Close the Gnuplot process</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"exit\n"</code><code class="cpp plain">);</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">pclose(gnuplotPipe);</code></div>
<div class="line number49 index48 alt2"> </div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number51 index50 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在選擇 Python 作為 Language 的 repl 專案中, cc 已經內建, 若要加裝 gnuplot 套件則可在 replit.nix 設定檔案中加入 pkgs.<a href="http://www.gnuplot.info/">gnuplot</a>, pkgs.<a href="https://invisible-island.net/ncurses/">ncurses</a>.dev, pkgs.<a href="https://github.com/libgd/libgd">gd</a>, pkgs.<a href="https://www.vim.org/">vim</a>HugeX 與 pkgs.<a href="https://github.com/raysan5/raylib">raylib</a>:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_592932">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">      </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">      </code><code class="js plain">pkgs.ncurses.dev</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">      </code><code class="js plain">pkgs.gd</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">      </code><code class="js plain">pkgs.vimHugeX</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">      </code><code class="js plain">pkgs.raylib</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">    </code><code class="js plain">];</code></div>
<div class="line number9 index8 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<h2>MSD</h2>
<p>Mass-Spring-Damper 是一個典型的物理模型, 由質量-彈簧-阻尼器等三個元件組成, 若將彈簧其拉力與變形量成正比, 若假設阻尼器的阻力大小則與其受力方向的速度成正比, 根據牛頓運動定律, 就可以從物理模型的自由體圖導入系統的運動方程式. 接下來就要利用計算機程式, 解此一系統的微分方程式.</p>
<p>計算機程式課程主要從基本的 C 語法開始, 設法利用數值分析法解簡單的<span> </span><a href="https://en.wikipedia.org/wiki/Mass-spring-damper_model">mass-spring-damper</a><span> </span>運動方程式, 並將質量運動的位移與速度, 以 Gnuplot 畫出後, 將 C 程式改寫為 Javascript, 以便能直接將質量運動的位移與速度圖顯示在網頁中.</p>
<p><img caption="false" height="159" src="https://mde.tw/cpnote/images/mass_spring_damper.png" width="250"/></p>
<p>in png:</p>
<p><img caption="false" height="36" src="https://mde.tw/cpnote/images/mass_spring_damper_eom.png" width="200"/></p>
<p>in<span> </span><a href="https://www.mathjax.org/#gettingstarted">MathJax</a><span> </span>v3:</p>
<p><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="0" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45A TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2E"></mjx-c></mjx-mo><mjx-texatom space="2" texclass="ORD"><mjx-mover><mjx-over><mjx-mo class="mjx-n"><mjx-c class="mjx-cA8"></mjx-c></mjx-mo></mjx-over><mjx-base><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-base></mjx-mover></mjx-texatom><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D461 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D450 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2E"></mjx-c></mjx-mo><mjx-texatom space="2" texclass="ORD"><mjx-mover><mjx-over><mjx-mo class="mjx-n"><mjx-c class="mjx-c2D9"></mjx-c></mjx-mo></mjx-over><mjx-base><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-base></mjx-mover></mjx-texatom><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D461 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="3"><mjx-c class="mjx-c1D458 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2E"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D461 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>�</mi><mo>.</mo><mrow data-mjx-texclass="ORD"><mover><mi>�</mi><mo>¨</mo></mover></mrow><mo stretchy="false">(</mo><mi>�</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>�</mi><mo>.</mo><mrow data-mjx-texclass="ORD"><mover><mi>�</mi><mo>˙</mo></mover></mrow><mo stretchy="false">(</mo><mi>�</mi><mo stretchy="false">)</mo><mo>−</mo><mi>�</mi><mo>.</mo><mi>�</mi><mo stretchy="false">(</mo><mi>�</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container></p>
<p>Solve<span> </span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZ222iTCfJdJjLNS6a55IDoBs74yVGLWuAxN-1VTJE2PNQ?e=ZbhQyw">spring-mass-damper problem in Matlab.pdf</a><span> </span>(需要下載密碼)</p>
<p>接續 Javascript 基本數值分析方法的學習, 將採 Brython 語法改寫後, 希望能直接在網頁中透過類似 Python 的語法, 進行數值分析運算與繪圖. 最後再將 Brython 語法轉為 CPython 程式, 讓使用者可以直接在電腦操作系統中進行數值分析與繪圖.</p>
<p>上述從 C, Javascript, Brython 到 Python 的範例練習, 主要目的是希望呈現最基本的網際機電資整合系統設計流程, 讓機械設計工程師能夠將所設計的產品 3D 零組件完成後, 轉入機電模擬系統 (CoppeliaSim, Webots 或 Robodk), 設法編寫或運用既有的全球資訊網前後端程式架構, 結合近端的實體模型與全球資訊網端的機電控制系統模擬, 進行機械、電子、電機與資工領域工程師協同產品設計.</p>
<p>由於 CoppeliaSim、Webots 以及 Solvespace 都是採用 C++ 程式語言編寫, 且都屬開放源程式套件, 使用者若要更進一步了解此類工具的設計與配置方法, 可以自行透過進階內容學習.</p>
<p>Euler's Method(<a href="https://youtu.be/Atvaac3_NlM">教學影片</a>,<span> </span><a href="https://www.freecodecamp.org/news/eulers-method-explained-with-examples/">說明1</a>,<span> </span><a href="https://web.uvic.ca/~tbazett/diffyqs/numer_section.html">說明2</a><span> </span>in English):</p>
<p><a href="https://tutorial.math.lamar.edu/classes/de/eulersmethod.aspx">https://tutorial.math.lamar.edu/classes/de/eulersmethod.aspx</a></p>
<p><img alt="" height="227" src="https://mde.tw/cpnote/images/Euler_method__plot.png" width="400"/></p>
<p>針對常微分方程式:<span> </span><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="1" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-mfrac><mjx-frac><mjx-num><mjx-nstrut></mjx-nstrut><mjx-mrow size="s"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi></mjx-mrow></mjx-num><mjx-dbox><mjx-dtable><mjx-line></mjx-line><mjx-row><mjx-den><mjx-dstrut></mjx-dstrut><mjx-mrow size="s"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D451 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi></mjx-mrow></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="2"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><mfrac><mrow><mi>�</mi><mi>�</mi></mrow><mrow><mi>�</mi><mi>�</mi></mrow></mfrac><mo>=</mo><mi>�</mi><mo stretchy="false">(</mo><mi>�</mi><mo>,</mo><mi>�</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container></p>
<p>假如<span> </span><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="2" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi><mo>+</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><span> </span>與<span> </span><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="3" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub></math></mjx-assistive-mml></mjx-container><span> </span>之間的距離非常接近, 則<span> </span><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="4" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-mfrac><mjx-frac><mjx-num><mjx-nstrut></mjx-nstrut><mjx-mrow size="s"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-mrow></mjx-num><mjx-dbox><mjx-dtable><mjx-line></mjx-line><mjx-row><mjx-den><mjx-dstrut></mjx-dstrut><mjx-mrow size="s"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-mrow></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2248"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><mfrac><mrow><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub></mrow><mrow><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub></mrow></mfrac><mo>≈</mo><mi>�</mi><mo stretchy="false">(</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub><mo>,</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container></p>
<p>若取<span> </span><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="5" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-mi class="mjx-i"><mjx-c class="mjx-c210E TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c3D"></mjx-c></mjx-mo><mjx-msub space="4"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>ℎ</mi><mo>=</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub></math></mjx-assistive-mml></mjx-container><span> </span>作為 x 座標在每一次計算過程的增量值.</p>
<p>則可以在已知此一常微分方程式的起始值之後, 逐一透過 h 增量值計算此常微分方程式在各 x 座標點上的對應值:</p>
<p><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="6" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo><mjx-mn class="mjx-n"><mjx-c class="mjx-c31"></mjx-c></mjx-mn></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="3"><mjx-c class="mjx-c2212"></mjx-c></mjx-mo><mjx-msub space="3"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n" space="4"><mjx-c class="mjx-c2248"></mjx-c></mjx-mo><mjx-mi class="mjx-i" space="4"><mjx-c class="mjx-c1D453 TEX-I"></mjx-c></mjx-mi><mjx-mo class="mjx-n"><mjx-c class="mjx-c28"></mjx-c></mjx-mo><mjx-msub><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D465 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c2C"></mjx-c></mjx-mo><mjx-msub space="2"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D466 TEX-I"></mjx-c></mjx-mi><mjx-script><mjx-texatom size="s" texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45B TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-script></mjx-msub><mjx-mo class="mjx-n"><mjx-c class="mjx-c29"></mjx-c></mjx-mo><mjx-mi class="mjx-i"><mjx-c class="mjx-c210E TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub><mo>≈</mo><mi>�</mi><mo stretchy="false">(</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub><mo>,</mo><msub><mi>�</mi><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></msub><mo stretchy="false">)</mo><mi>ℎ</mi></math></mjx-assistive-mml></mjx-container></p>
<p></p>
<p>此外, 只要在網頁中導入:</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_200952">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">&lt;</code><code class="html keyword">script</code> <code class="html color1">src</code><code class="html plain">=</code><code class="html string">"https://polyfill.io/v3/polyfill.min.js?features=es6"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
<div class="line number2 index1 alt1"><code class="html plain">&lt;</code><code class="html keyword">script</code> <code class="html color1">src</code><code class="html plain">=</code><code class="html string">"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>就可以利用 MathJax v3 的<span> </span><mjx-container class="MathJax CtxtMenu_Attached_0" ctxtmenu_counter="7" jax="CHTML" tabindex="0"><mjx-math aria-hidden="true" class="MJX-TEX"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D43F TEX-I"></mjx-c></mjx-mi><mjx-mspace></mjx-mspace><mjx-mpadded><mjx-block><mjx-rbox><mjx-texatom texclass="ORD"><mjx-mstyle size="s"><mjx-texatom texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D434 TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-mstyle></mjx-texatom></mjx-rbox></mjx-block></mjx-mpadded><mjx-mspace></mjx-mspace><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi><mjx-mspace></mjx-mspace><mjx-mpadded><mjx-block><mjx-rbox><mjx-texatom texclass="ORD"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D438 TEX-I"></mjx-c></mjx-mi></mjx-texatom></mjx-rbox></mjx-block></mjx-mpadded><mjx-mspace></mjx-mspace><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D44B TEX-I"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml display="inline" unselectable="on"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>�</mi><mspace width="-.325em"></mspace><mpadded depth="-.21em" height="+.21em" voffset="+.21em"><mrow data-mjx-texclass="ORD"><mstyle displaystyle="false" scriptlevel="1"><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></mstyle></mrow></mpadded><mspace width="-.17em"></mspace><mi>�</mi><mspace width="-.14em"></mspace><mpadded depth="+.5ex" height="-.5ex" voffset="-.5ex"><mrow data-mjx-texclass="ORD"><mi>�</mi></mrow></mpadded><mspace width="-.115em"></mspace><mi>�</mi></math></mjx-assistive-mml></mjx-container><span> </span>語法, 輸入所需要呈現的數學方程式.</p>
<p><a href="https://twiki.cern.ch/twiki/pub/Main/CollaborativeProjects/7_Application_-_1.pdf">Runge-Kutta Method</a>:</p>
<p><a href="https://www.researchgate.net/publication/340027249_Developments_in_Runge-Kutta_Method_to_Solve_Ordinary_Differential_Equations">Developments in Runge–Kutta Method to Solve Ordinary Differential Equations</a></p>
<p><a href="https://www.me.psu.edu/cimbala/Learning/General/Runge_Kutta_Technique.pdf">https://www.me.psu.edu/cimbala/Learning/General/Runge_Kutta_Technique.pdf</a></p>
<p><a href="https://homepage.math.uiowa.edu/~atkinson/papers/NAODE_Book.pdf">NUMERICAL SOLUTION OF ORDINARY DIFFERENTIAL EQUATIONS</a><span> </span>(from one of the authors)</p>
<hr/>
<p>將 euler_gnuplot_msd_ex1.c 存入 downloads 目錄, 然後在 replit.nix 中進行 C 與 gnuplot 套件的設置:</p>
<p>replit.nix 設定內容:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_856569">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">  </code><code class="js plain">pkgs.qtile</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">  </code><code class="js plain">pkgs.sudo</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">  </code><code class="js plain">pkgs.clang_12</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.ccls</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.gdb</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.gnumake</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code><code class="js plain">];</code></div>
<div class="line number11 index10 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>euler_gnuplot_msd_ex1.c 程式內容:</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_442580">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp comments">// 包含標準輸出入程式庫的標頭文件</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp comments">// 主函式</code></div>
<div class="line number5 index4 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Open a file to write displacement and velocity data</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"motion_data.txt"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!outputFile) {</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to create data file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Simulate motion for 10 seconds and calculate displacement and velocity, while writing data to the file</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">x = 0.2;  </code><code class="cpp comments">// Initial displacement</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">v = 0.0;  </code><code class="cpp comments">// Initial velocity</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">dt = 0.01; </code><code class="cpp comments">// Time step</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">t = 0.0;  </code><code class="cpp comments">// Time</code></div>
<div class="line number18 index17 alt1"> </div>
<div class="line number19 index18 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code> <code class="cpp plain">(t &lt;= 10.0) {</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">double</code> <code class="cpp plain">acceleration = (-10.0 * x - 0.5 * v) / 1.0; </code><code class="cpp comments">// Modified system parameters here</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">        </code><code class="cpp plain">v += acceleration * dt;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">        </code><code class="cpp plain">x += v * dt;</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(outputFile, </code><code class="cpp string">"%lf %lf %lf\n"</code><code class="cpp plain">, t, x, v);</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="cpp spaces">        </code><code class="cpp plain">t += dt;</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close the data file</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Start a Gnuplot process using popen</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*gnuplotPipe = popen(</code><code class="cpp string">"gnuplot -persistent"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!gnuplotPipe) {</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to start Gnuplot.\n"</code><code class="cpp plain">);</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number38 index37 alt1"> </div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Use Gnuplot plotting commands, specify font and output as PNG</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set terminal pngcairo enhanced font 'default,10' size 800,400\n"</code><code class="cpp plain">);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set output './../images/motion_plot.png'\n"</code><code class="cpp plain">);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set title 'Displacement and Velocity vs. Time'\n"</code><code class="cpp plain">);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set xlabel 'Time (s)'\n"</code><code class="cpp plain">);</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set ylabel 'Displacement (m)'\n"</code><code class="cpp plain">);</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, "plot </code><code class="cpp string">'motion_data.txt'</code> <code class="cpp keyword bold">using</code> <code class="cpp plain">1:2 with lines lw 2 title </code><code class="cpp string">'Displacement'</code><code class="cpp plain">, \</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">                             </code><code class="cpp string">'motion_data.txt'</code> <code class="cpp keyword bold">using</code> <code class="cpp plain">1:3 with lines lw 2 title </code><code class="cpp string">'Velocity'</code><code class="cpp plain">\n");</code></div>
<div class="line number47 index46 alt2"> </div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Close the Gnuplot process</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"exit\n"</code><code class="cpp plain">);</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp plain">pclose(gnuplotPipe);</code></div>
<div class="line number51 index50 alt2"> </div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number53 index52 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在 Shell 工具頁面:</p>
<p>cd downloads</p>
<p>cc euler_gnuplot_msd_ex1.c</p>
<p>經過編譯與連結後取得 a.out</p>
<p>然後利用 ./a.out 執行, 就可以在 images 目錄下得到 mass-spring-damper 微分運動方程式採 Euler's Method 模擬數值分析結果, motion_plot.png:</p>
<p><img alt="" height="200" src="https://mde.tw/cpnote/images/motion_plot.png" width="400"/></p>
<p>假如程式中需要使用數學函數運算則可 #include &lt;math.h&gt;, 並在編譯時納入 -lm, 亦即連結數程式庫.</p>
<p>cc ex_with_math.c -lm -o ex_with_math</p>
<p>然後以 ./ex_with_math 執行</p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<h1>ANSIC</h1>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">//#include &lt;stdio.h&gt;將sidio.h的檔案內容加進來
//int main()
//{}表示一個區塊的開始和結束
//printf()把框框內的文字列印到螢幕上
//;分號代表句子的結束
//\n表示換行
//return(0);回傳0這個值
#include &lt;stdio.h&gt;
int main()
{
printf("Name :李恆達\n");
printf("DOB :November 07, 2004\n");
printf("Mobile :0933-433-628\n");
return(0);  
}
</pre>
<p><img alt="" height="100" src="/images/1.c.png" width="225"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">//#include &lt;stdio.h&gt;將sidio.h的檔案內容加進來
//int main()
//{}表示一個區塊的開始和結束
//printf()把框框內的文字列印到螢幕上
//;分號代表句子的結束
//\n表示換行
//return(0);回傳0這個值
#include &lt;stdio.h&gt;
int main(){
printf("          ######\n");
printf("        ##      ##\n");
printf("       ##        ##\n");
printf("      ##          ##\n");
printf("     ################\n");
printf("    ##              ##\n");
printf("   ##                ##\n");
printf("  ##                  ##\n");

return(0);
}</pre>
<p></p>
<p><img alt="" height="100" src="/images/3.c.png" width="140"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int main()
{
    int days, years, weeks;

    days = 3333; // Total number of days

    // Converts days to years, weeks and days
    years = days/365; // Calculate years
    weeks = (days % 365)/7; // Calculate weeks
    days = days - ((years*365) + (weeks*7)); // Calculate remaining days

    // Print the results
    printf("Years: %d\n", years);
    printf("Weeks: %d\n", weeks);
    printf("Days: %d \n", days);

    return 0;
}</pre>
<p><img alt="" height="100" src="/images/8.c.png" width="294"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
int main() {
    char id[10];         // Variable to store employee ID (up to 10 characters)
    int hour;            // Variable to store working hours
    double value, salary; // Variables for hourly salary and total salary

    // Prompt user for employee ID
    printf("Input the Employees ID(Max. 10 chars): ");
    scanf("%s", &amp;id);

    // Prompt user for working hours
    printf("\nInput the working hrs: ");
    scanf("%d", &amp;hour);

    // Prompt user for hourly salary
    printf("\nSalary amount/hr: ");
    scanf("%lf", &amp;value);

    // Calculate total salary
    salary = value * hour;

    // Print employee ID and salary
    printf("\nEmployees ID = %s\nSalary = U$ %.2lf\n", id, salary);

    return 0;
}</pre>
<p><img alt="" height="259" src="/images/12.c.png" width="292"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
int main() {
    int i; // Declare variable for loop counter

    printf("Even numbers between 1 to 50 (inclusive):\n");

    for (i = 1; i &lt;= 50; i++) 
    {
        if(i%2 == 0) // Check if 'i' is even
        {
            printf("%d ", i); // Print 'i' if it's even
        }
    }

    return 0;
}</pre>
<p><span class="token comment"><img alt="" height="64" src="/images/26.c.png" width="563"/><br/><br/></span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
int main() {
    double s=0, j=1, d, i;

    // Loop to calculate the series
    for(i=1; i&lt;=7; i+=2){
        d = (i/j);
        s += d;
        j = j*2;
    }

    // Print the result
    printf("Value of series: %.2lf\n", s);

    return 0;
}</pre>
<p><span class="token comment"><img alt="" height="53" src="/images/46.c.png" width="225"/><br/><br/></span></p>
<p></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#define N 10

int main() {
  char chr;
  printf("\n");

  // Loop through ASCII values from 65 ('A') to 122 ('z')
  for (chr = 65; chr &lt;= 122; chr = chr + 1) {
    // Exclude characters between 'Z' and 'a'
    if (chr &gt; 90 &amp;&amp; chr &lt; 97)
      continue;

    printf("[%2d-%c] ", chr, chr);
  }

  return 0;
}</pre>
<p><img alt="" height="137" src="/images/70.c.png" width="706"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include&lt;stdio.h&gt;
int main()
{
    int x;

    /* Print column names */
    printf("Number\tSquare\tCube\n");
    printf("=========================\n");

    // Loop to calculate and print squares and cubes
    for(x=0; x&lt;=20; x++)
        printf("%d\t%d\t%d\n", x, x*x, x*x*x);

    return 0;
}</pre>
<p><br/><img alt="" height="393" src="/images/76.c.png" width="224"/></p>
<p></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;limits.h&gt;
#include &lt;float.h&gt;
int main( void )
{
    // Print header for integer data types
    printf( "Ranges for integer data types in C\n\n" );

    // Print separator line
    printf( "------------------------------------------------------------\n");

    // Print range for int8_t
    printf( "int8_t    %20d  %20d\n"     , SCHAR_MIN , SCHAR_MAX  );

    // Print range for int16_t
    printf( "int16_t   %20d  %20d\n"     , SHRT_MIN  , SHRT_MAX   );

    // Print range for int32_t
    printf( "int32_t   %20d  %20d\n"     , INT_MIN   , INT_MAX    );

    // Print range for int64_t
    printf( "int64_t   %20lld  %20lld\n" , LLONG_MIN , LLONG_MAX  );

    // Print range for uint8_t
    printf( "uint8_t   %20d  %20d\n"     , 0         , UCHAR_MAX  );

    // Print range for uint16_t
    printf( "uint16_t  %20d  %20d\n"     , 0         , USHRT_MAX  );

    // Print range for uint32_t
    printf( "uint32_t  %20d  %20u\n"     , 0         , UINT_MAX   );

    // Print range for uint64_t
    printf( "uint64_t  %20d  %20llu\n"   , 0         , ULLONG_MAX );

    // Print separator line
    printf( "\n" );

    // Print separator line
    printf( "============================================================\n\n");

    // Print header for real number data types
    printf( "Ranges for real number data types in C\n\n" );

    // Print separator line
    printf( "------------------------------------------------------------\n");

    // Print range for float
    printf( "float        %14.7g  %14.7g\n"   , FLT_MIN  , FLT_MAX  );

    // Print range for double
    printf( "double       %14.7g  %14.7g\n"   , DBL_MIN  , DBL_MAX  );

    // Print range for long double
    printf( "long double  %14.7Lg  %14.7Lg\n" , LDBL_MIN , LDBL_MAX );

    // Print separator line
    printf( "\n" );

    return 0;
}</pre>
<p><br/><img alt="" height="357" src="/images/87.c.png" width="493"/></p>
<p></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int main ()
{
    int a, b;

    // Loop to execute statements with changing values of 'a' and 'b'
    for (a = 1, b = 100; a &lt;= 37, b &gt;= 0; a += 5, b -= 10)
        printf("a=%d \t b=%d\n", a, b);
}</pre>
<p><img alt="" height="214" src="/images/113.c.png" width="252"/></p>
<p><br/><br/><br/><br/><br/><br/>c_ex</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
int main()
{
/* 印出 Hello World! Bye Bye */
printf("Hello World! "); printf("Bye "); printf("Bye");
return 0;
}</pre>
<p><img alt="" height="67" src="/images/ex.c.png" width="323"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
void main()
{
float a = 0.5;
double b = 1.2;
int c = 3;
b = b + a + c;
/* 輸出 a, b, c 到螢幕 */
printf( " a = %3.1f, b = %3.1f, c = %d ", a ,b, c );
}</pre>
<p><img alt="" height="47" src="/images/ex2.c.png" width="355"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
int main()
{
int a = 10, b = 5;
printf( " a == b is %d \n", a == b );
printf( " a &gt; b is %d \n", a &gt; b );
printf( " a &lt; b is %d \n", a &lt; b );
printf( " a &gt;= b is %d \n", a &gt;= b );
printf( " a &lt;= b is %d \n", a &lt;= b );
printf( " a != b is %d \n", a != b );
printf( "\n" );
b = 10;
printf( " a == b is %d \n", a == b );
printf( " a &gt; b is %d \n", a &gt; b );
printf( " a &lt; b is %d \n", a &lt; b );
printf( " a &gt;= b is %d \n", a &gt;= b );
printf( " a &lt;= b is %d \n", a &lt;= b );
printf( " a != b is %d \n", a != b );
return 0;
}</pre>
<p><img alt="" height="239" src="/images/4.ccc.png" width="255"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include&lt;stdio.h&gt;
void main()
{
int a,b;
a = 15;
b = 1;
printf("%d \n", a | b ); /* a OR b */
printf("%d \n", a &amp; b ); /* a AND b */
printf("%d \n", a ^ b ); /* a XOR b */
printf("%d \n", a &lt;&lt; 1 ); /* a 位元左移 1 位 */
printf("%d \n", a &gt;&gt; 1 ); /* a 位元右移一位 */
printf("%d \n", ~a ); /* A 的補數運算 */
}</pre>
<p><img alt="" height="130" src="/images/5.ccc.png" width="263"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
void main()
{
int a;
a = 3;
printf("%d\n", !a );
a = 0;
printf("%d\n", !a );
}</pre>
<p><img alt="" height="65" src="/images/6.ccc.png" width="246"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
float circle( int r ); /* 宣告 circle 的 prototype */
void main()
{
float answer;
answer = circle(8);
printf( " 圓周長度是 %f", answer );
}
/* ====================
 circle 函數, 計算 circle 的圓周長
==================== */
float circle( int r )
{
float result;
result = 3.14159 * (double)2 * r;
return ( result );
}</pre>
<p><img alt="" height="53" src="/images/7.ccc.png" width="265"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">int main()
{
int a,b;
a = 10; b = 3;
printf( "%d \n", a * b );
printf( "%d \n", a / b );
printf( "%d \n", a + b );
printf( "%d \n", a - b );
printf( "%d \n", a % b );
return 0;
}</pre>
<p><br/><br/></p>
<p></p>
<p><img alt="" height="321" src="/images/ex3.c.png" width="628"/>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>